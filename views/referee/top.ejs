<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>速報</title>
    <link rel="stylesheet" href="/public/bootstrap-5.2.2-dist/css/bootstrap.css">
    <link rel="stylesheet" href="/public/jquery-ui-1.13.2.custom/jquery-ui.css">
    <link rel="stylesheet" href="/public/stylesheets/box_style.css">
    <%- include('../share/stylesheet.ejs') %>
        <script src="/public/bootstrap-5.2.2-dist/js/bootstrap.bundle.js"></script>
        <script src="/socket.io/socket.io.js"></script>

        <style>
            .ui-resizable-helper {
                border: 1px dotted gray;
            }

            .side-btn {
                text-align: end;
                right: 0;
                margin-right: 0.5px;
            }
        </style>
</head>

<body>
    <%- include("../share/sec_top_navber.ejs"); %>
        <div class="container-fluid">
            <div class="row">
                <main class="col-md-12 ms-sm-auto col-lg-12 col-xl-12 px-md-2">
                    <div class="row px-1 mb-3 me-0">
                        <input type="hidden" name="judge" id="judge" value="<%=judge%>">
                        <div class="text-center card fontBK">
                            <div class="card-body">
                                <h3 id="game-name"></h3>
                                <h5 id="game-date"></h5>
                            </div>
                        </div>
                        <input type="hidden" id="game" value="<%= game_id %>">
                        <div id="topBody" class="row px-2 mx-1">

                        </div>
                    </div>
                </main>
            </div>
            <script src="/node_modules/jquery/dist/jquery.min.js"></script>
            <script src="/public/jquery-ui-1.13.2.custom/jquery-ui.min.js"></script>
            <script>
                const obj = x => document.getElementById(x);
                const category = obj('category');
                const game_id = obj('game').value
                const gameroom = 'game' + game_id;

                (function () {
                    category_get();
                    // setInterval(function () {
                    //     if (document.getElementById('category_id').value > 0) {
                    //         get_result();
                    //     }
                    // }, 10000);
                }());
                // カテゴリー情報取得
                function category_get() {
                    var game_id = obj('game').value;
                    $.ajax({
                        url: `/category/${game_id}`,
                        type: 'post',
                        catch: false,
                        dataType: 'json',
                        data: {
                            game_id: game_id
                        }
                    })
                        .done(function (data) {
                            let player_category = obj('player-category').value;
                            // データに応じてセレクトをついか
                            var select = document.createElement('select')
                            select.classList.add('form-control', 'form-control-sm', 'form-select');
                            select.setAttribute('name', 'category_id')
                            select.setAttribute('id', 'category_id');
                            var option = document.createElement('option');
                            option.textContent = '部門を選択してください';
                            select.appendChild(option);

                            for (var i = 0; i < data.length; i++) {
                                var option = document.createElement('option');
                                option.value = data[i].category_id;
                                option.textContent = data[i].category_name;
                                if (player_category == data[i].category_id) {
                                    option.selected = true;
                                }
                                select.appendChild(option);
                            }
                            category.appendChild(select);
                        })
                        // Ajaxリクエストが失敗した場合
                        .fail(function () {
                            window.alert('正しい結果を得られませんでした。');
                        });
                }

                function changeResult(kind) {
                    $.ajax({
                        url: `/category/${kind}`,
                        type: 'get',
                        catch: false,
                        dataType: 'json',
                    })
                        .done(function (data) {
                            gameDate(data);
                        })
                        // Ajaxリクエストが失敗した場合
                        .fail(function () {
                            window.alert('正しい結果を得られませんでした。');
                        });
                }
                $(function () {

                    //セレクトボックスが切り替わったら発動
                    $('#category').on('change', 'select', function () {

                        //選択したvalue値を変数に格納
                        var val = $(this).val();
                        $.ajax({
                            url: `/category/${val}`,
                            type: 'get',
                            catch: false,
                            dataType: 'json',
                        })
                            .done(function (data) {
                                gameDate(data);
                            })
                            // Ajaxリクエストが失敗した場合
                            .fail(function () {
                                window.alert('正しい結果を得られませんでした。');
                            });

                    });
                }); // 試合データの受け取り
                function gameDate(categoryData) {
                    $.ajax({
                        url: `/top/<%= game_id %>`,
                        type: 'get',
                        catch: false,
                        dataType: 'json',
                    })
                        .done(function (data) {
                            resultBody(categoryData, data);
                            $(".box").resizable({
                                animate: true,
                                ghost: true
                            });
                            $(".box").draggable({
                                opacity: 0.5
                            });

                        })
                        // Ajaxリクエストが失敗した場合
                        .fail(function () {
                            window.alert('正しい結果を得られませんでした。');
                        });
                }
                // 試合結果
                function gameScoreStart(kind, categoryData) {
                    var url = `/top/<%= game_id %>/1/${kind}/${categoryData[0].category_id}`;
                    $.ajax({
                        url: `/top/<%= game_id %>/1/${kind}/${categoryData[0].category_id}`,
                        type: 'get',
                        catch: false,
                        dataType: 'json',
                    })
                        .done(function (data) {

                            // 種目番号を取得
                            var rast = kind.slice(-1);
                            var kind_num = rast.charAt(0);
                            // テーブルを作成
                            // 行数が1行のみだった場合テーブルを作成
                            var table = document.getElementById(`table-${kind}tb`);
                            if (table.rows.length < 2) {
                                if (kind_num < 8) {
                                    createTable(data, kind, categoryData);
                                } else if (kind_num == 8) {
                                    createTable_allScore(data, kind, categoryData);
                                } else if (kind == 'kokutai') {
                                    createTable_kokutai(data, kind);
                                }
                            }
                            // テーブルにデータを挿入
                            if (kind_num < 8) {
                                tableInData(data, kind, categoryData)
                            } else if (kind_num == 8) {

                                tableInDataALL(data, kind, categoryData);
                                // 種目非表示
                                hiddenTb(categoryData)
                            } else if (kind == 'kokutai') {
                                tableInDatakokutai(data, kind, categoryData);
                                // 種目非表示
                                hiddenTb(categoryData)

                            }
                        })
                        // Ajaxリクエストが失敗した場合
                        .fail(function () {
                            window.alert('正しい結果を得られませんでした。');
                        });
                }
                // 表示非表示の切り替え
                $(function () {
                    $(document).on('click', '.secList', function () {
                        $('.' + $(this).attr('id')).toggle();
                    });
                });

                function tableData(kind, kindData) {
                    if (kind == 'kokutai') {
                        $.ajax({
                            url: `/now_game/<%= game_id %>/${kindData.category_id}`,
                            type: 'get',
                            catch: false,
                            dataType: 'json',
                        })
                            .done(function (data) {
                                // テーブルにデータを挿入
                                tableInDatakokutai(data)
                            })
                    } else {
                        $.ajax({
                            url: `/top/<%= game_id %>/1/${kind}/${kindData.category_id}`,
                            type: 'get',
                            catch: false,
                            dataType: 'json',
                        })
                            .done(function (data2) {
                                // 種目番号を取得
                                var rast = kind.slice(-1);
                                var kind_num = rast.charAt(0);

                                // テーブルにデータを挿入
                                tableInData(data2, kind)
                            })
                        if (kindData.kozin == 1) {
                            $.ajax({
                                url: `/top/<%= game_id %>/1/kind8/${kindData.category_id}`,
                                type: 'get',
                                catch: false,
                                dataType: 'json',
                            })
                                .done(function (data2) {
                                    tableInDataALL(data2, 'kind8', kindData);
                                })
                                // Ajaxリクエストが失敗した場合
                                .fail(function () { });
                        }

                    }
                }
                function get_result(r) {
                    var category_id = document.getElementById('category_id').value;
                    if (r == 'kokutai') {
                        console.log(r)
                        $.ajax({
                            url: `/now_game/<%= game_id %>/${category_id}`,
                            type: 'get',
                            catch: false,
                            dataType: 'json',
                        })
                            .done(function (data) {
                                // テーブルにデータを挿入
                                tableInDatakokutai(data)
                            })
                            .fail(function () {

                            })
                    } else {

                    }
                }

            </script>
            <script src="/public/javascripts/function/socket_top.js"></script>
            <script src="/public/javascripts/function/judgeFunc/judge_name.js"></script>
            <script>
                socket.on('postScore', (msg) => {
                    var result;
                    if (document.getElementById('category_id').value == msg.category_id) {
                        if (msg.kokutai == 1) {
                            tableData('kokutai', msg.kindData)
                            tableData('kokutai', msg.kindData)
                            tableData('kokutai', msg.kindData)

                        } else if (msg.kind_num > 0) {
                            tableData(`kind${msg.kind_num}`, msg.kindData)
                            tableData(`kind${msg.kind_num}`, msg.kindData)
                            tableData(`kind${msg.kind_num}`, msg.kindData)
                        }
                    } else {

                    }
                })
                //入室
                function joinRoom() {
                    let judge = obj('judge').value;
                    let judgeroom = 'judge' + judgeName(judge);
                    let judgetyperoom = 'type:' + judgeType(judge);

                    socket.emit('room-in', {
                        gameroom,
                        judgeroom,
                        judgetyperoom
                    })
                }
                //socket確認　
                socket.on('check', (msg) => {
                    var judge = obj('judge').value;
                    if (msg.judge == judge || msg.judge == '100') {
                        // 取得を開始する
                        socket.emit('check-return', {
                            judge
                        }, gameroom);
                    }
                });
            </script>
            <script src="/public/javascripts/function/topFunc/top_ref_display.js"></script>
            <script src="/public/javascripts/function/topFunc/top_ref_table.js"></script>
            <script src="/public/javascripts/function/topFunc/all_score_table.js"></script>
            <script src="/public/javascripts/function/topFunc/top_side.js"></script>
            <script src="/public/javascripts/function/topFunc/kokutai_table.js"></script>

</body>

</html>